# src/prompts.py 파일의 내용을 아래 코드로 교체하세요.

# ----------------------------------------------------------------------------------
# Single-turn CoT 프롬프트
# - '사고 과정'을 통해 논리 오류를 처리하고, 이후 최종 교정만 출력하도록 강제
# - FN/FP/FR 분석 기반의 Few-shot과 제약 조건 포함
# ----------------------------------------------------------------------------------
single_turn_cot_prompt = """
# 지시
다음 <원문>을 교정하세요.

1. **사고 과정 (Reasoning):** 먼저 문장에서 **맞춤법, 띄어쓰기, 문법, 논리적 오류** 중 교정할 부분이 있는지 분석하고, 없다면 '수정 불필요'라고 판단 과정을 구체적으로 서술하세요. (이 단계는 최종 출력에 포함되지 않습니다.)
2. **최소 교정 원칙:** 맞춤법, 띄어쓰기, 문법 오류가 명확한 부분만 교정하며, 문맥을 해치지 않으면 최대한 원문을 유지합니다.
3. **고유 정보 보호:** 숫자, 고유명사, 전문 용어는 **절대** 수정하거나 ( ) 괄호 내의 내용을 추가하지 마세요.
4. **최종 출력 형식:** **사고 과정** 이후, **오직** <교정> 태그와 함께 **교정된 문장 하나**만 출력합니다.

# Few-shot 예시
<원문>
오늘 날씨가 않좋은데, 김치찌게 먹으러 갈려고.

<사고 과정>
오류 유형: 맞춤법, 띄어쓰기, 어미 오류.
1. '않좋은데'는 '안 좋은데'(띄어쓰기 오류)로 수정.
2. '김치찌게'는 '김치찌개'(맞춤법 오류)로 수정.
3. '갈려고'는 '가려고'(어미 오류)로 수정.
4. 최종 교정된 문장을 출력.

<교정>
오늘 날씨가 안 좋은데, 김치찌개 먹으러 가려고.

<원문>
그는 그 일에 적합한 사람일까?

<사고 과정>
오류 유형: 조사 오류.
'그는'이 주어 역할을 하기에 자연스럽지만, '그가'를 사용하여 문장의 의미를 명확하게 하는 것이 좋습니다. (교정 데이터 기반)

<교정>
그가 그 일에 적합한 사람일까?

# 교정할 문장
<원문>
{text}
<사고 과정>
"""
single_turn_cot_prompt = single_turn_cot_prompt.strip()

# 이전 코드가 baseline_prompt를 참조하는 경우를 대비하여 정의합니다.
baseline_prompt = single_turn_cot_prompt